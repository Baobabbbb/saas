import{s as n}from"./supabaseClient-84cb7855.js";import"./preload-helper-8235fac6.js";console.log("🚀 FRIDAY: Service créations - SUPABASE ONLY MODE");function i(){const r=localStorage.getItem("friday_supabase_user");if(r)return JSON.parse(r).id;const e=localStorage.getItem("userEmail");return e?"friday-user-"+btoa(e).slice(0,10):"friday-anonymous-"+Date.now()}async function R({type:r,title:e,data:o}){console.log("💾 FRIDAY: Sauvegarde création en base Supabase",{type:r,title:e});const t=i();try{const a={user_id:t,type:r,title:e,data:{...o,created_via:"friday_web",user_email:localStorage.getItem("userEmail")||"anonymous",timestamp:new Date().toISOString()}};console.log("📤 Envoi vers Supabase:",a);const{data:c,error:s}=await n.from("creations").insert([a]).select().single();if(s)throw console.error("❌ ERREUR Supabase lors de la création:",s),console.error("🔍 FRIDAY: Détails erreur Supabase:",{message:s.message,details:s.details,hint:s.hint,code:s.code}),console.error("📄 FRIDAY: Données envoyées:",a),new Error(`Erreur base de données: ${s.message}`);return console.log("✅ Création sauvegardée en base:",c),c}catch(a){throw console.error("❌ ERREUR CRITIQUE lors de la sauvegarde:",a),a}}async function l(){console.log("📥 FRIDAY: Récupération créations depuis Supabase");const r=i();try{const{data:e,error:o}=await n.from("creations").select("*").eq("user_id",r).order("created_at",{ascending:!1});if(o)throw console.error("❌ ERREUR Supabase lors de la récupération:",o),new Error(`Erreur base de données: ${o.message}`);return console.log(`✅ ${(e==null?void 0:e.length)||0} créations récupérées de la base`),e||[]}catch(e){throw console.error("❌ ERREUR CRITIQUE lors de la récupération:",e),e}}const g=l;async function p(r){console.log("🗑️ FRIDAY: Suppression création de Supabase, ID:",r);try{const{error:e}=await n.from("creations").delete().eq("id",r);if(e)throw console.error("❌ ERREUR Supabase lors de la suppression:",e),new Error(`Erreur base de données: ${e.message}`);return console.log("✅ Création supprimée de la base"),!0}catch(e){throw console.error("❌ ERREUR CRITIQUE lors de la suppression:",e),e}}async function E(r,e){console.log("📝 FRIDAY: Mise à jour création en base, ID:",r);try{const{data:o,error:t}=await n.from("creations").update({...e,updated_at:new Date().toISOString()}).eq("id",r).select().single();if(t)throw console.error("❌ ERREUR Supabase lors de la mise à jour:",t),new Error(`Erreur base de données: ${t.message}`);return console.log("✅ Création mise à jour en base:",o),o}catch(o){throw console.error("❌ ERREUR CRITIQUE lors de la mise à jour:",o),o}}async function m(r){console.log("🔍 FRIDAY: Récupération création spécifique, ID:",r);try{const{data:e,error:o}=await n.from("creations").select("*").eq("id",r).single();if(o)throw console.error("❌ ERREUR Supabase lors de la récupération:",o),new Error(`Erreur base de données: ${o.message}`);return console.log("✅ Création récupérée:",e),e}catch(e){throw console.error("❌ ERREUR CRITIQUE lors de la récupération:",e),e}}async function b(){console.log("🧪 FRIDAY: Test de connexion Supabase...");try{const{data:r,error:e,count:o}=await n.from("creations").select("*",{count:"exact",head:!0});return e?(console.error("❌ Connexion Supabase échouée:",e),{success:!1,error:e.message}):(console.log("✅ Connexion Supabase réussie - Créations en base:",o),{success:!0,count:o})}catch(r){return console.error("❌ Test connexion échoué:",r),{success:!1,error:r.message}}}console.log("✅ FRIDAY: Service créations initialisé - Mode Supabase uniquement");export{R as addCreation,p as deleteCreation,m as getCreation,l as getCreations,g as getUserCreations,b as testSupabaseConnection,E as updateCreation};
