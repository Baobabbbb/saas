import{s}from"./supabaseClient-746ee024.js";import"./preload-helper-8235fac6.js";async function c(){var e;try{const{data:{session:r},error:o}=await s.auth.getSession();if((e=r==null?void 0:r.user)!=null&&e.id)return r.user.id;const t=localStorage.getItem("friday_user_cache");if(t){const a=JSON.parse(t);if(a.id)return a.id}return null}catch(r){return console.error("Erreur récupération ID utilisateur:",r),null}}async function f({type:e,title:r,data:o}){const t=await c();if(!t)throw new Error("Utilisateur non connecté");try{const a={user_id:t,type:e,title:r,data:{...o,created_via:"friday_web",timestamp:new Date().toISOString()}},{data:i,error:n}=await s.from("creations").insert([a]).select().single();if(n)throw console.error("Erreur Supabase lors de la création:",n),new Error(`Erreur base de données: ${n.message}`);return i}catch(a){throw console.error("Erreur lors de la sauvegarde:",a),a}}async function u(){const e=await c();if(!e)return[];try{const{data:r,error:o}=await s.from("creations").select("*").eq("user_id",e).order("created_at",{ascending:!1});if(o)throw console.error("Erreur Supabase lors de la récupération:",o),new Error(`Erreur base de données: ${o.message}`);return r||[]}catch(r){throw console.error("Erreur lors de la récupération:",r),r}}const w=u;async function p(e){try{const{error:r}=await s.from("creations").delete().eq("id",e);if(r)throw console.error("Erreur Supabase lors de la suppression:",r),new Error(`Erreur base de données: ${r.message}`);return!0}catch(r){throw console.error("Erreur lors de la suppression:",r),r}}async function h(e,r){try{const{data:o,error:t}=await s.from("creations").update({...r,updated_at:new Date().toISOString()}).eq("id",e).select().single();if(t)throw console.error("Erreur Supabase lors de la mise à jour:",t),new Error(`Erreur base de données: ${t.message}`);return o}catch(o){throw console.error("Erreur lors de la mise à jour:",o),o}}async function E(e){try{const{data:r,error:o}=await s.from("creations").select("*").eq("id",e).single();if(o)throw console.error("Erreur Supabase lors de la récupération:",o),new Error(`Erreur base de données: ${o.message}`);return r}catch(r){throw console.error("Erreur lors de la récupération:",r),r}}async function g(){try{const{data:e,error:r,count:o}=await s.from("creations").select("*",{count:"exact",head:!0});return r?(console.error("Connexion Supabase échouée:",r),{success:!1,error:r.message}):{success:!0,count:o}}catch(e){return console.error("Test connexion échoué:",e),{success:!1,error:e.message}}}export{f as addCreation,p as deleteCreation,E as getCreation,u as getCreations,w as getUserCreations,g as testSupabaseConnection,h as updateCreation};
