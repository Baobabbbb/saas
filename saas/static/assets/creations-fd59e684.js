import{s as t}from"./supabaseClient-84cb7855.js";import"./preload-helper-8235fac6.js";console.log("🚀 FRIDAY: Service créations - SUPABASE ONLY MODE");async function i(){var r;try{const{data:{session:e},error:o}=await t.auth.getSession();if((r=e==null?void 0:e.user)!=null&&r.id)return console.log("👤 FRIDAY: ID utilisateur récupéré depuis session Supabase:",e.user.id),e.user.id;const a=localStorage.getItem("friday_user_cache");if(a){const s=JSON.parse(a);if(s.id)return console.log("👤 FRIDAY: ID utilisateur récupéré depuis cache:",s.id),s.id}return console.warn("⚠️ FRIDAY: Aucun ID utilisateur trouvé"),null}catch(e){return console.error("❌ FRIDAY: Erreur récupération ID utilisateur:",e),null}}async function R({type:r,title:e,data:o}){console.log("💾 FRIDAY: Sauvegarde création en base Supabase",{type:r,title:e});const a=await i();if(!a)throw console.warn("⚠️ FRIDAY: Impossible de sauvegarder - pas d'ID utilisateur"),new Error("Utilisateur non connecté");try{const s={user_id:a,type:r,title:e,data:{...o,created_via:"friday_web",user_email:localStorage.getItem("userEmail")||"anonymous",timestamp:new Date().toISOString()}};console.log("📤 Envoi vers Supabase:",s);const{data:c,error:n}=await t.from("creations").insert([s]).select().single();if(n)throw console.error("❌ ERREUR Supabase lors de la création:",n),console.error("🔍 FRIDAY: Détails erreur Supabase:",{message:n.message,details:n.details,hint:n.hint,code:n.code}),console.error("📄 FRIDAY: Données envoyées:",s),new Error(`Erreur base de données: ${n.message}`);return console.log("✅ Création sauvegardée en base:",c),c}catch(s){throw console.error("❌ ERREUR CRITIQUE lors de la sauvegarde:",s),s}}async function u(){console.log("📥 FRIDAY: Récupération créations depuis Supabase");const r=await i();if(!r)return console.warn("⚠️ FRIDAY: Impossible de récupérer les créations - pas d'ID utilisateur"),[];try{console.log("🔍 FRIDAY: Recherche créations pour user_id:",r);const{data:e,error:o}=await t.from("creations").select("*").eq("user_id",r).order("created_at",{ascending:!1});if(o)throw console.error("❌ ERREUR Supabase lors de la récupération:",o),new Error(`Erreur base de données: ${o.message}`);return console.log(`✅ ${(e==null?void 0:e.length)||0} créations récupérées de la base`),e||[]}catch(e){throw console.error("❌ ERREUR CRITIQUE lors de la récupération:",e),e}}const p=u;async function g(r){console.log("🗑️ FRIDAY: Suppression création de Supabase, ID:",r);try{const{error:e}=await t.from("creations").delete().eq("id",r);if(e)throw console.error("❌ ERREUR Supabase lors de la suppression:",e),new Error(`Erreur base de données: ${e.message}`);return console.log("✅ Création supprimée de la base"),!0}catch(e){throw console.error("❌ ERREUR CRITIQUE lors de la suppression:",e),e}}async function I(r,e){console.log("📝 FRIDAY: Mise à jour création en base, ID:",r);try{const{data:o,error:a}=await t.from("creations").update({...e,updated_at:new Date().toISOString()}).eq("id",r).select().single();if(a)throw console.error("❌ ERREUR Supabase lors de la mise à jour:",a),new Error(`Erreur base de données: ${a.message}`);return console.log("✅ Création mise à jour en base:",o),o}catch(o){throw console.error("❌ ERREUR CRITIQUE lors de la mise à jour:",o),o}}async function E(r){console.log("🔍 FRIDAY: Récupération création spécifique, ID:",r);try{const{data:e,error:o}=await t.from("creations").select("*").eq("id",r).single();if(o)throw console.error("❌ ERREUR Supabase lors de la récupération:",o),new Error(`Erreur base de données: ${o.message}`);return console.log("✅ Création récupérée:",e),e}catch(e){throw console.error("❌ ERREUR CRITIQUE lors de la récupération:",e),e}}async function w(){console.log("🧪 FRIDAY: Test de connexion Supabase...");try{const{data:r,error:e,count:o}=await t.from("creations").select("*",{count:"exact",head:!0});return e?(console.error("❌ Connexion Supabase échouée:",e),{success:!1,error:e.message}):(console.log("✅ Connexion Supabase réussie - Créations en base:",o),{success:!0,count:o})}catch(r){return console.error("❌ Test connexion échoué:",r),{success:!1,error:r.message}}}console.log("✅ FRIDAY: Service créations initialisé - Mode Supabase uniquement");export{R as addCreation,g as deleteCreation,E as getCreation,u as getCreations,p as getUserCreations,w as testSupabaseConnection,I as updateCreation};
